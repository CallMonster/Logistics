package com.zt.hackman.activity;

import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.view.View;
import android.widget.ImageView;
import android.widget.Toast;

import com.lzy.imagepicker.ImagePicker;
import com.lzy.imagepicker.bean.ImageItem;
import com.lzy.imagepicker.loader.ImageLoader;
import com.lzy.imagepicker.ui.ImageGridActivity;
import com.lzy.imagepicker.view.CropImageView;
import com.zt.hackman.R;
import com.zt.hackman.base.BaseActivity;
import com.zt.hackman.base.BaseApp;
import com.zt.hackman.constant.Constant;
import com.zt.hackman.listener.LeftListener;
import com.zt.hackman.listener.RightListener;
import com.zt.hackman.loader.PicassoImageLoader;
import com.zt.hackman.model.HackmanModel;
import com.zt.hackman.model.NavModel;

import java.util.ArrayList;

/**
 * Created by Administrator on 2016/9/18.
 */
public class EditHackmanOneActivity extends
        BaseActivity implements LeftListener,RightListener,View.OnClickListener {

    NavModel navModel;
    HackmanModel model;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_hackman_one);
        findViewByIds();
        initNavBar();
    }

    @Override
    protected void initNavBar() {
        navModel = new NavModel(this);
        navModel.setLeftListener(this);
        navModel.setRightListener(this);
        navModel.setLeftBtn(R.mipmap.main_back);
        navModel.setTitle("驾驶员信息(1/2)");
        navModel.setRightBtn("下一步");
    }

    @Override
    protected void findViewByIds() {
        model = new HackmanModel(this,this,1);

    }

    @Override
    protected void initView() {

    }

    @Override
    protected void initData() {

    }

    @Override
    public void leftClick() {
        finish();
    }

    @Override
    public void rightClick() {
        startActivity(EditHackmanTwoActivity.class);
    }

    @Override
    public void onClick(View v) {
        switch (v.getId()){
            case R.id.oneFrontBtn:
                chooseImg();
                break;
            case R.id.oneReserveBtn:
                chooseImg();
                break;
        }
    }

    public void chooseImg(){
        ImagePicker imagePicker = ImagePicker.getInstance();
        imagePicker.setImageLoader(new PicassoImageLoader());   //设置图片加载器
        imagePicker.setShowCamera(true);  //显示拍照按钮
        imagePicker.setCrop(false);        //允许裁剪（单选才有效）
        imagePicker.setSaveRectangle(true); //是否按矩形区域保存
        imagePicker.setSelectLimit(1);    //选中数量限制
        //imagePicker.setStyle(CropImageView.Style.RECTANGLE);  //裁剪框的形状
//        imagePicker.setFocusWidth(800);   //裁剪框的宽度。单位像素（圆形自动取宽高最小值）
//        imagePicker.setFocusHeight(800);  //裁剪框的高度。单位像素（圆形自动取宽高最小值）
//        imagePicker.setOutPutX(1000);//保存文件的宽度。单位像素
//        imagePicker.setOutPutY(1000);//保存文件的高度。单位像素

        Intent intent = new Intent(this, ImageGridActivity.class);
        startActivityForResult(intent, Constant.INTNENTS.IMAGE_PICKER);
    }

    @Override
    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
        super.onActivityResult(requestCode, resultCode, data);
        if (resultCode == ImagePicker.RESULT_CODE_ITEMS) {
            if (data != null && requestCode == Constant.INTNENTS.IMAGE_PICKER) {
                Toast.makeText(this, "数据已经回来了", Toast.LENGTH_SHORT).show();
//                ArrayList<ImageItem> images = (ArrayList<ImageItem>) data.getSerializableExtra(ImagePicker.EXTRA_RESULT_ITEMS);
//                MyAdapter adapter = new MyAdapter(images);
//                gridView.setAdapter(adapter);
            } else {
                Toast.makeText(this, "没有数据", Toast.LENGTH_SHORT).show();
            }
        }
    }
}
