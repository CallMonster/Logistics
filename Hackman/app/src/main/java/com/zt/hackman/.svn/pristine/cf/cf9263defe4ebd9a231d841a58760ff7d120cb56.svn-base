package com.zt.hackman.base;

import android.app.Activity;
import android.app.Application;
import android.content.Context;
import android.graphics.Bitmap;
import android.os.Environment;

import com.nostra13.universalimageloader.cache.disc.impl.UnlimitedDiskCache;
import com.nostra13.universalimageloader.cache.memory.impl.UsingFreqLimitedMemoryCache;
import com.nostra13.universalimageloader.core.DisplayImageOptions;
import com.nostra13.universalimageloader.core.ImageLoader;
import com.nostra13.universalimageloader.core.ImageLoaderConfiguration;
import com.nostra13.universalimageloader.core.assist.ImageScaleType;
import com.nostra13.universalimageloader.core.display.RoundedBitmapDisplayer;
import com.nostra13.universalimageloader.core.display.SimpleBitmapDisplayer;
import com.nostra13.universalimageloader.utils.StorageUtils;
import com.zt.hackman.R;

import java.io.File;
import java.util.Stack;


/**
 * Created by Eugene on 2016/4/21.
 */
public class BaseApp extends Application {
    private static BaseApp baseApp;
    private static Context context;
    public static DisplayImageOptions options, circleOptions,
            cornerCircleOptions,superOptions;

    public static BaseApp getInstance(){
        return baseApp;
    }

    public static Context getContext(){

        return context;
    }
    @Override
    public void onCreate() {
        super.onCreate();
        //在使用SDK各组件之前初始化context信息，传入ApplicationContext

        baseApp = new BaseApp();
        context = this;
        initImageLoader(context);
    }


    public static void initImageLoader(Context context) {
        // This configuration tuning is custom. You can tune every option, you
        // may tune some of them,
        // or you can create default configuration by

        // method.
        int memory = (int) Runtime.getRuntime().maxMemory();

        String CACHE_DIR = Environment.getExternalStorageDirectory()
                .getAbsolutePath() + "/.temp_tmp";
        new File(CACHE_DIR).mkdirs();

        File cacheDir = StorageUtils.getOwnCacheDirectory(context, CACHE_DIR);


        ImageLoaderConfiguration.Builder builder = new ImageLoaderConfiguration.Builder(
                context).defaultDisplayImageOptions(options).threadPoolSize(5)
                .diskCache(new UnlimitedDiskCache(cacheDir))
                .memoryCache(new UsingFreqLimitedMemoryCache(1024 * 1024 * 200));

        ImageLoaderConfiguration config = builder.build();
        ImageLoader.getInstance().init(config);

        circleOptions = new DisplayImageOptions.Builder()
                .showImageOnLoading(R.mipmap.logo)
                .showImageForEmptyUri(R.mipmap.logo)
                .showImageOnFail(R.mipmap.logo)
                .resetViewBeforeLoading(true)
                .cacheOnDisk(true).cacheInMemory(true)
                .imageScaleType(ImageScaleType.EXACTLY)
                // EXACTLY:恰好\精确地 EXACTLY_STRETCHED:全部拉伸 default
                .bitmapConfig(Bitmap.Config.RGB_565)
                .displayer(new RoundedBitmapDisplayer(720)) // default:SimpleBitmapDisplayer()
                .build();

        options = new DisplayImageOptions.Builder()
                .showImageOnLoading(R.mipmap.default_image)
                .showImageForEmptyUri(R.mipmap.default_image)
                .showImageOnFail(R.mipmap.default_image)
                .resetViewBeforeLoading(true)
                .cacheOnDisk(true)
                .cacheInMemory(true)
                .imageScaleType(ImageScaleType.EXACTLY)
                .bitmapConfig(Bitmap.Config.RGB_565)
                .displayer(new SimpleBitmapDisplayer()).build();

//        cornerCircleOptions = new DisplayImageOptions.Builder()
//                .showImageOnLoading(R.mipmap.default_corncircle_img)
//                .showImageForEmptyUri(R.mipmap.default_corncircle_img)
//                .showImageOnFail(R.mipmap.default_corncircle_img)
//                .resetViewBeforeLoading(true)
//                .cacheOnDisk(true).cacheInMemory(true)
//                .imageScaleType(ImageScaleType.EXACTLY)
//                // EXACTLY:恰好\精确地 EXACTLY_STRETCHED:全部拉伸 default
//                .bitmapConfig(Bitmap.Config.RGB_565)
//                .displayer(new RoundedBitmapDisplayer(DisplayUtil.dip2px(8))) // default:SimpleBitmapDisplayer()
//                .build();

//        superOptions = new DisplayImageOptions.Builder()
//                .showImageOnLoading(R.mipmap.default_img_super_big)
//                .showImageForEmptyUri(R.mipmap.default_img_super_big)
//                .showImageOnFail(R.drawable.default_img_super_big)
//                .resetViewBeforeLoading(true)
//                .cacheOnDisk(true)
//                .cacheInMemory(true)
//                .imageScaleType(ImageScaleType.EXACTLY)
//                .bitmapConfig(Bitmap.Config.RGB_565)
//                .displayer(new SimpleBitmapDisplayer()).build();

    }

}
